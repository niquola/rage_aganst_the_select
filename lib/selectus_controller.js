// Generated by CoffeeScript 1.5.0
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  (function($) {
    var SelectController;
    SelectController = (function() {

      function SelectController(node) {
        var data,
          _this = this;
        this.node = node;
        this.dispatchKeypress = __bind(this.dispatchKeypress, this);
        data = ['one', 'two', 'three'];
        this.model = new window.SelectModel(data);
        this.view = new window.SelectView(this.node);
        $(this.view).on('focus', (function() {
          return _this.model.activate();
        }));
        $(this.view).on('blur', (function() {
          return _this.model.inactivate();
        }));
        $(this.view).on('input', this.dispatchKeypress);
        $(this.view).on('selection', function(ev, val) {
          return _this.model.setValue(val);
        });
        $(this.view).on('prev', function(ev, val) {
          return _this.model.prev();
        });
        $(this.view).on('next', function(ev, val) {
          return _this.model.next();
        });
        $(this.model).on('activated', (function() {
          return _this.view.active();
        }));
        $(this.model).on('inactivated', (function() {
          return _this.view.inactive();
        }));
        $(this.model).on('open', (function() {
          return _this.view.showDropdown();
        }));
        $(this.model).on('close', (function() {
          return _this.view.hideDropdown();
        }));
        $(this.model).on('results', this.view.showResults);
        $(this.model).on('valueChanged', (function(ev, val) {
          return _this.view.setValue(val);
        }));
        $(this.model).on('highlight', (function(ev, item) {
          return _this.view.highlight(item);
        }));
      }

      SelectController.prototype.dispatchKeypress = function(_, val) {
        return this.model.filter(val);
      };

      return SelectController;

    })();
    return window.SelectController = SelectController;
  })(jQuery);

}).call(this);
