// Generated by CoffeeScript 1.5.0
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  (function($) {
    var KEY, SelectView;
    KEY = {
      TAB: 9,
      ENTER: 13,
      ESC: 27,
      SPACE: 32,
      LEFT: 37,
      UP: 38,
      RIGHT: 39,
      DOWN: 40,
      SHIFT: 16,
      CTRL: 17,
      ALT: 18,
      PAGE_UP: 33,
      PAGE_DOWN: 34,
      HOME: 36,
      END: 35,
      BACKSPACE: 8,
      DELETE: 46
    };
    return SelectView = (function() {

      function SelectView(node) {
        this.showResults = __bind(this.showResults, this);
        this.dispatchKeypress = __bind(this.dispatchKeypress, this);        this.node = $(node);
        this.createDom();
      }

      SelectView.prototype.createDom = function() {
        this.node.hide();
        this.createContainer();
        this.createFocusNode();
        this.createDropdown();
        return this.createHidden();
      };

      SelectView.prototype.createContainer = function() {
        return this.containerNode = $('<div></div>', {
          "class": 'selectus-container'
        }).insertAfter(this.node);
      };

      SelectView.prototype.createFocusNode = function() {
        var _this = this;
        this.focusNode = $("<input></input>", {
          "type": 'text'
        }).appendTo(this.containerNode);
        this.focusNode.on('focus', function() {
          return $(_this).trigger('focus');
        });
        this.focusNode.on('keydown', this.dispatchKeypress);
        return this.focusNode.on('input', function(ev) {
          return $(_this).trigger('input', [_this.focusNode.val()]);
        });
      };

      SelectView.prototype.dispatchKeypress = function(e) {
        switch (e.which) {
          case KEY.UP:
            return $(this).trigger('prev');
          case KEY.DOWN:
            return $(this).trigger('next');
        }
      };

      SelectView.prototype.createDropdown = function() {
        var self;
        this.dropdownNode = $('<ul></ul>', {
          "class": 'dropdown-menu'
        }).appendTo(this.containerNode);
        this.hideDropdown();
        self = this;
        return this.dropdownNode.delegate('a', 'click', function() {
          return $(self).trigger('selection', [$(this).data('id')]);
        });
      };

      SelectView.prototype.createHidden = function() {
        return this.hiddenNode = $('<span></span>', {
          html: 'ups'
        }).appendTo(this.containerNode);
      };

      SelectView.prototype.setValue = function(val) {
        return this.hiddenNode.text("Value: " + (JSON.stringify(val)));
      };

      SelectView.prototype.active = function() {
        return this.dropdownNode.addClass('active');
      };

      SelectView.prototype.inactive = function() {
        return this.dropdownNode.removeClass('active');
      };

      SelectView.prototype.showResults = function(ev, items) {
        var item;
        return this.dropdownNode.html(((function() {
          var _i, _len, _results;
          _results = [];
          for (_i = 0, _len = items.length; _i < _len; _i++) {
            item = items[_i];
            _results.push(this.itemLine(item));
          }
          return _results;
        }).call(this)).join(''));
      };

      SelectView.prototype.itemLine = function(item) {
        return "<li data-id='" + item._id + "'><a data-id='" + item._id + "' href='#'>" + item.data + "</a></li>";
      };

      SelectView.prototype.showDropdown = function() {
        return this.dropdownNode.show();
      };

      SelectView.prototype.hideDropdown = function() {
        return this.dropdownNode.hide();
      };

      SelectView.prototype.highlight = function(item) {
        var node;
        if (!item) {
          return;
        }
        node = this.dropdownNode.find("li[data-id='" + item._id + "']");
        this.dropdownNode.find('li.active').removeClass('active');
        node.addClass('active');
        return console.log(node);
      };

      window.SelectView = SelectView;

      return SelectView;

    })();
  })(jQuery);

}).call(this);
